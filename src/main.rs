mod constant;
mod error;
mod funcobject;
mod instruction;
mod machine;
mod opcode;
mod parser;
mod program;

use machine::{Machine, StackFrame};
use parser::program;
use program::Program;

fn main() {
    let result = program(b"\x00\x00\x00\x00\x00\x00\x00\x03\x05\x01\x00\x00\x00\x00\x00\x00\x00\x03\x03\x00\x00\x00\x61\x01\x00\x00\x00\x00\x00\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x02\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x02\x0e\x00\x00\x00\x02\x07\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x00\x02\x06\x00\x00\x00\x11\x00\x00\x00\x02\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x00\x02\x09\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x0a\xed\x94\xbc\xeb\xb3\xb4\xeb\x82\x98\xec\xb9\x98\x20\xec\x88\x98\x20\xea\xb5\xac\xed\x95\x98\xeb\x8b\xa4\x00\x00\x00\x02\x05\x00\x00\x00\x01\x00\x00\x00\x02\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x02\x00\x00\x00\x02\x09\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x0a\xed\x94\xbc\xeb\xb3\xb4\xeb\x82\x98\xec\xb9\x98\x20\xec\x88\x98\x20\xea\xb5\xac\xed\x95\x98\xeb\x8b\xa4\x00\x00\x00\x02\x05\x00\x00\x00\x01\x00\x00\x00\x02\x08\x05\x01\x00\x00\x00\x00\x00\x00\x00\x02\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x05\x02\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x05\x0d\x00\x00\x00\x05\x07\x00\x00\x00\x06\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x05\x06\x00\x00\x00\x0b\x00\x00\x00\x05\x02\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x01\x00\x00\x00\x05\x09\x00\x00\x00\x05\x04\x00\x00\x00\x00\x00\x00\x00\x02\xec\xb6\x9c\xeb\xa0\xa5\x00\x00\x00\x05\x05\x00\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x03\x00\x00\x00\x00\x00\x00\x00\x0a\xed\x94\xbc\xeb\xb3\xb4\xeb\x82\x98\xec\xb9\x98\x20\xec\x88\x98\x20\xea\xb5\xac\xed\x95\x98\xeb\x8b\xa4\x00\x00\x00\x04\x00\x00\x00\x00\x01\x00\x00\x00\x04\x03\x00\x00\x00\x00\x00\x00\x00\x02\xec\xb6\x9c\xeb\xa0\xa5\x00\x00\x00\x07\x00\x00\x00\x00\x02\x00\x00\x00\x07\x04\x00\x00\x00\x00\x00\x00\x00\x0a\xed\x94\xbc\xeb\xb3\xb4\xeb\x82\x98\xec\xb9\x98\x20\xec\x88\x98\x20\xea\xb5\xac\xed\x95\x98\xeb\x8b\xa4\x00\x00\x00\x07\x05\x00\x00\x00\x01\x00\x00\x00\x07\x01");

    match result {
        Ok((_, Program { const_table, code })) => {
            let mut machine: Machine = Default::default();
            let frame = StackFrame {
                code,
                const_table,
                slot_start: 0,
            };

            match machine.run(&frame) {
                Ok(_) => println!("정상 종료"),
                Err((line_number, err)) => {
                    println!("{}번째 라인 에서 에러 발생 : {}", line_number, err)
                }
            }
        }
        Err(err) => {
            println!("{:?}", err);
        }
    }
}
